{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\nlw4\\\\trilha_react\\\\moveit-next\\\\src\\\\components\\\\CountDown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountDown() {\n    setIsActive(true);\n  }\n\n  function restartCountDown() {\n    setIsActive(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: endCountDown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: restartCountDown,\n      children: \"Iniciar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"Gt1wBlh2SAtB67+sBwCXkrGE/Ng=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/src/components/CountDown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountDown","restartCountDown","setTimeout","countdownContainer","countdownButton","countdownButtonActive","endCountDown"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AAAA,kBACCH,QAAQ,CAAC,KAAK,EAAN,CADT;AAAA,MAChBI,IADgB;AAAA,MACVC,OADU;;AAAA,mBAESL,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAEhBM,QAFgB;AAAA,MAENC,WAFM;;AAIvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AALuB,8BAOWQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPX;AAAA;AAAA,MAOhBC,UAPgB;AAAA,MAOJC,WAPI;;AAAA,+BAQWJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARX;AAAA;AAAA,MAQhBG,UARgB;AAAA,MAQJC,WARI;;AAUvB,WAASC,cAAT,GAAyB;AACrBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASa,gBAAT,GAA2B;AACvBb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDN,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGK,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AACpBiB,MAAAA,UAAU,CAAC,YAAI;AACXhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAMP,CAACE,QAAD,EAAWF,IAAX,CANO,CAAT;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACoB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAeOZ,QAAQ,gBAEP;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,YAAKJ,MAAM,CAACqB,eAAZ,cAA+BrB,MAAM,CAACsB,qBAAtC,CAFT;AAGA,MAAA,OAAO,EAAEC,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,gBAcP;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAEvB,MAAM,CAACqB,eAFlB;AAGA,MAAA,OAAO,EAAEH,gBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GArEejB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown(){\r\n    const [time, setTime] = useState(25 * 60);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n    \r\n    function startCountDown(){\r\n        setIsActive(true);\r\n    }\r\n\r\n    function restartCountDown(){\r\n        setIsActive(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isActive && time > 0){\r\n            setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }\r\n    },[isActive, time]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                \r\n                <span>:</span>\r\n\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>   \r\n            </div>\r\n\r\n            {  isActive ?\r\n                (\r\n                <button \r\n                type=\"button\" \r\n                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                onClick={endCountDown}\r\n                >\r\n                    Abandonar ciclo  \r\n                </button>\r\n                )\r\n\r\n                :\r\n                \r\n                (\r\n                <button \r\n                type=\"button\" \r\n                className={styles.countdownButton}\r\n                onClick={restartCountDown}\r\n                >\r\n                    Iniciar ciclo  \r\n                </button>\r\n                )\r\n            }\r\n\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}