{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\nlw4\\\\trilha_react\\\\moveit-next\\\\src\\\\contexts\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallangesContext } from \"./ChallangesContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallangesContext),\n      startNewChallange = _useContext.startNewChallange;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountDown() {\n    setIsActive(true);\n  }\n\n  function resetCountDown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setHasFinished(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallange();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountDown: startCountDown,\n      resetCountDown: resetCountDown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"Aq4rHtzccf0M52KfzX6DtC+CEEc=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallangesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallange","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountDown","resetCountDown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAgBA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,oBACrCP,UAAU,CAACG,iBAAD,CAD2B;AAAA,MAC3DK,iBAD2D,eAC3DA,iBAD2D;;AAAA,kBAG3CN,QAAQ,CAAC,KAAK,EAAN,CAHmC;AAAA,MAG5DO,IAH4D;AAAA,MAGtDC,OAHsD;;AAAA,mBAInCR,QAAQ,CAAC,KAAD,CAJ2B;AAAA,MAI5DS,QAJ4D;AAAA,MAIlDC,WAJkD;;AAAA,mBAK7BV,QAAQ,CAAC,KAAD,CALqB;AAAA,MAK5DW,WAL4D;AAAA,MAK/CC,cAL+C;;AAOnE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAAyB;AACrBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACH;;AAEDT,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGU,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AACpBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAI;AAC9BZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAGE,QAAQ,IAAIF,IAAI,KAAK,CAAxB,EAA0B;AAC7BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUP,CAACG,QAAD,EAAWF,IAAX,CAVO,CAAT;AAYA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AACA,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAPA,OADG;AAEHG,MAAAA,OAAO,EAAPA,OAFG;AAGHL,MAAAA,WAAW,EAAXA,WAHG;AAIHF,MAAAA,QAAQ,EAARA,QAJG;AAKHQ,MAAAA,cAAc,EAAdA,cALG;AAMHC,MAAAA,cAAc,EAAdA;AANG,KADP;AAAA,cAUKb;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA/CeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { ChallangesContext } from \"./ChallangesContext\";\r\n\r\n\r\ninterface CountdownContextData {\r\n    minutes: number;\r\n    seconds: number;\r\n    hasFinished: boolean;\r\n    isActive: boolean;\r\n    startCountDown: () => void;\r\n    resetCountDown: () => void;\r\n}\r\n\r\ninterface CountdownProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextData);\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function CountdownProvider({ children }: CountdownProviderProps){\r\n    const { startNewChallange } = useContext(ChallangesContext);\r\n\r\n    const [time, setTime] = useState(25 * 60);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    function startCountDown(){\r\n        setIsActive(true);\r\n    }\r\n\r\n    function resetCountDown(){\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setHasFinished(false);\r\n        setTime(25 * 60);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isActive && time > 0){\r\n            countdownTimeout = setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        } else if(isActive && time === 0){\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n            startNewChallange();\r\n        }\r\n    },[isActive, time]);\r\n\r\n    return (\r\n        <CountdownContext.Provider \r\n        value={{\r\n            minutes,\r\n            seconds,\r\n            hasFinished,\r\n            isActive,\r\n            startCountDown,\r\n            resetCountDown\r\n        }}\r\n        >\r\n            {children}\r\n        </CountdownContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}