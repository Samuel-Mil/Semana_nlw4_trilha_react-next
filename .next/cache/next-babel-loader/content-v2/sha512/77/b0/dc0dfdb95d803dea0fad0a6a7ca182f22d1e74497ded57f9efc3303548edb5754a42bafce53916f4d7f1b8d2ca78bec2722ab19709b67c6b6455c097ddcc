{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\nlw4\\\\trilha_react\\\\moveit-next\\\\src\\\\contexts\\\\ChallangesContext.tsx\";\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challanges from '../../challanges.json';\nexport const ChallangesContext = /*#__PURE__*/createContext({});\nexport function ChallangesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challangeCompleted,\n    1: setChallangeCompleted\n  } = useState(0);\n  const {\n    0: activeChallange,\n    1: setActiveChallange\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challangeCompleted', String(challangeCompleted));\n  }, [level, currentExperience, challangeCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    alert(`Parabéns você foi para o level ${level + 1}`);\n  }\n\n  function startNewChallange() {\n    const ramdomChallangesIndex = Math.floor(Math.random() * challanges.length);\n    const challange = challanges[ramdomChallangesIndex];\n    setActiveChallange(challange);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio! :3', {\n        body: `Valendo ${challange.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallange() {\n    setActiveChallange(null);\n  }\n\n  function completeChallange() {\n    if (!activeChallange) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallange;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallange(null);\n    setChallangeCompleted(challangeCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallangesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      experienceToNextLevel,\n      challangeCompleted,\n      activeChallange,\n      levelUp,\n      startNewChallange,\n      resetChallange,\n      completeChallange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/src/contexts/ChallangesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challanges","ChallangesContext","ChallangesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challangeCompleted","setChallangeCompleted","activeChallange","setActiveChallange","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","alert","startNewChallange","ramdomChallangesIndex","floor","random","length","challange","Audio","play","permission","body","amount","resetChallange","completeChallange","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challanges from '../../challanges.json';\r\n\r\ninterface Challange{\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallangesContextData{\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challangeCompleted: number;\r\n    activeChallange: Challange;\r\n    levelUp: () => void;\r\n    startNewChallange: () => void;\r\n    resetChallange: () => void;\r\n    completeChallange: () => void; \r\n}\r\n\r\ninterface ChallangesProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallangesContext = createContext({} as ChallangesContextData);\r\n\r\nexport function ChallangesProvider({ children }: ChallangesProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challangeCompleted, setChallangeCompleted] = useState(0);\r\n\r\n    const [activeChallange, setActiveChallange] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    useEffect(()=>{\r\n        Notification.requestPermission();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challangeCompleted', String(challangeCompleted));\r\n    }, [level, currentExperience, challangeCompleted]);\r\n\r\n    function levelUp(){\r\n        setLevel(level + 1);\r\n        alert(`Parabéns você foi para o level ${level+1}`);\r\n    }\r\n\r\n    function startNewChallange(){\r\n        const ramdomChallangesIndex = Math.floor(Math.random() * challanges.length);\r\n        const challange = challanges[ramdomChallangesIndex];\r\n\r\n        setActiveChallange(challange);\r\n        \r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted'){\r\n            new Notification('Novo desafio! :3',{\r\n                body: `Valendo ${challange.amount}xp!`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallange(){\r\n        setActiveChallange(null);\r\n    }\r\n\r\n    function completeChallange(){\r\n        if(!activeChallange){\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallange;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if(finalExperience >= experienceToNextLevel){\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();   \r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallange(null);\r\n        setChallangeCompleted(challangeCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallangesContext.Provider \r\n            value={{ \r\n                level, \r\n                currentExperience,\r\n                experienceToNextLevel,\r\n                challangeCompleted, \r\n                activeChallange,\r\n                levelUp,\r\n                startNewChallange,\r\n                resetChallange,\r\n                completeChallange\r\n            }}\r\n        >\r\n            { children }\r\n        </ChallangesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}