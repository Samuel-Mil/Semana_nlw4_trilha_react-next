{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\nlw4\\\\trilha_react\\\\moveit-next\\\\src\\\\contexts\\\\ChallangesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challanges from '../../challanges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallangesContext = /*#__PURE__*/createContext({});\nexport function ChallangesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challangesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challangesCompl = rest.challangesCompleted) !== null && _rest$challangesCompl !== void 0 ? _rest$challangesCompl : 0),\n      challangeCompleted = _useState3[0],\n      setChallangeCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallange = _useState4[0],\n      setActiveChallange = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalUp = _useState5[0],\n      setIsLevelUpModalUp = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challangesCompleted', String(challangeCompleted));\n  }, [level, currentExperience, challangeCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalUp(true);\n  }\n\n  function startNewChallange() {\n    var ramdomChallangesIndex = Math.floor(Math.random() * challanges.length);\n    var challange = challanges[ramdomChallangesIndex];\n    setActiveChallange(challange);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio! :3', {\n        body: \"Valendo \".concat(challange.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallange() {\n    setActiveChallange(null);\n  }\n\n  function completeChallange() {\n    if (!activeChallange) {\n      return;\n    }\n\n    var amount = activeChallange.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallange(null);\n    setChallangeCompleted(challangeCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallangesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challangeCompleted: challangeCompleted,\n      activeChallange: activeChallange,\n      levelUp: levelUp,\n      startNewChallange: startNewChallange,\n      resetChallange: resetChallange,\n      completeChallange: completeChallange,\n      setIsLevelUpModalUp: setIsLevelUpModalUp\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallangesProvider, \"wzMwnmDEcjYk00URcUzLmrMKb44=\");\n\n_c = ChallangesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallangesProvider\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/src/contexts/ChallangesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challanges","LevelUpModal","ChallangesContext","ChallangesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challangesCompleted","challangeCompleted","setChallangeCompleted","activeChallange","setActiveChallange","isLevelUpModalUp","setIsLevelUpModalUp","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallange","ramdomChallangesIndex","floor","random","length","challange","Audio","play","permission","body","amount","resetChallange","completeChallange","finalExperience"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AA4BA,OAAO,IAAMC,iBAAiB,gBAAGN,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASO,kBAAT,OAA2E;AAAA;;AAAA;;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAhCC,IAAgC;;AAAA,kBACpDP,QAAQ,gBAACO,IAAI,CAACC,KAAN,qDAAe,CAAf,CAD4C;AAAA,MACvEA,KADuE;AAAA,MAChEC,QADgE;;AAAA,mBAE5BT,QAAQ,0BAACO,IAAI,CAACG,iBAAN,yEAA2B,CAA3B,CAFoB;AAAA,MAEvEA,iBAFuE;AAAA,MAEpDC,oBAFoD;;AAAA,mBAG1BX,QAAQ,0BAACO,IAAI,CAACK,mBAAN,yEAA6B,CAA7B,CAHkB;AAAA,MAGvEC,kBAHuE;AAAA,MAGnDC,qBAHmD;;AAAA,mBAKhCd,QAAQ,CAAC,IAAD,CALwB;AAAA,MAKvEe,eALuE;AAAA,MAKtDC,kBALsD;;AAAA,mBAM9BhB,QAAQ,CAAC,KAAD,CANsB;AAAA,MAMvEiB,gBANuE;AAAA,MAMrDC,mBANqD;;AAQ9E,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACb,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAT,EAAAA,SAAS,CAAC,YAAI;AACVuB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAxB,EAAAA,SAAS,CAAC,YAAI;AACVE,IAAAA,OAAO,CAACuB,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAACjB,KAAD,CAA3B;AACAP,IAAAA,OAAO,CAACuB,GAAR,CAAY,mBAAZ,EAAiCC,MAAM,CAACf,iBAAD,CAAvC;AACAT,IAAAA,OAAO,CAACuB,GAAR,CAAY,qBAAZ,EAAmCC,MAAM,CAACZ,kBAAD,CAAzC;AACH,GAJQ,EAIN,CAACL,KAAD,EAAQE,iBAAR,EAA2BG,kBAA3B,CAJM,CAAT;;AAMA,WAASa,OAAT,GAAkB;AACdjB,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAU,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;;AAED,WAASS,iBAAT,GAA4B;AACxB,QAAMC,qBAAqB,GAAGR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,MAAL,KAAgB5B,UAAU,CAAC6B,MAAtC,CAA9B;AACA,QAAMC,SAAS,GAAG9B,UAAU,CAAC0B,qBAAD,CAA5B;AAEAZ,IAAAA,kBAAkB,CAACgB,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAGZ,YAAY,CAACa,UAAb,KAA4B,SAA/B,EAAyC;AACrC,UAAIb,YAAJ,CAAiB,kBAAjB,EAAoC;AAChCc,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AAD4B,OAApC;AAGH;AACJ;;AAED,WAASC,cAAT,GAAyB;AACrBtB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASuB,iBAAT,GAA4B;AACxB,QAAG,CAACxB,eAAJ,EAAoB;AAChB;AACH;;AAHuB,QAKhBsB,MALgB,GAKLtB,eALK,CAKhBsB,MALgB;AAOxB,QAAIG,eAAe,GAAG9B,iBAAiB,GAAG2B,MAA1C;;AAEA,QAAGG,eAAe,IAAIrB,qBAAtB,EAA4C;AACxCqB,MAAAA,eAAe,GAAGA,eAAe,GAAGrB,qBAApC;AACAO,MAAAA,OAAO;AACV;;AAEDf,IAAAA,oBAAoB,CAAC6B,eAAD,CAApB;AACAxB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,qBAAqB,CAACD,kBAAkB,GAAG,CAAtB,CAArB;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHS,MAAAA,qBAAqB,EAArBA,qBAHG;AAIHN,MAAAA,kBAAkB,EAAlBA,kBAJG;AAKHE,MAAAA,eAAe,EAAfA,eALG;AAMHW,MAAAA,OAAO,EAAPA,OANG;AAOHC,MAAAA,iBAAiB,EAAjBA,iBAPG;AAQHW,MAAAA,cAAc,EAAdA,cARG;AASHC,MAAAA,iBAAiB,EAAjBA,iBATG;AAUHrB,MAAAA,mBAAmB,EAAnBA;AAVG,KADX;AAAA,eAcMZ,QAdN,eAgBI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAnFeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challanges from '../../challanges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challange{\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallangesContextData{\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challangeCompleted: number;\r\n    setIsLevelUpModalUp: boolean;\r\n    activeChallange: Challange;\r\n    levelUp: () => void;\r\n    startNewChallange: () => void;\r\n    resetChallange: () => void;\r\n    completeChallange: () => void;\r\n}\r\n\r\ninterface ChallangesProviderProps{\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challangesCompleted: number;\r\n}\r\n\r\nexport const ChallangesContext = createContext({} as ChallangesContextData);\r\n\r\nexport function ChallangesProvider({ children, ...rest }: ChallangesProviderProps){\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challangeCompleted, setChallangeCompleted] = useState(rest.challangesCompleted ?? 0);\r\n\r\n    const [activeChallange, setActiveChallange] = useState(null);\r\n    const [isLevelUpModalUp, setIsLevelUpModalUp] = useState(false);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    useEffect(()=>{\r\n        Notification.requestPermission();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challangesCompleted', String(challangeCompleted));\r\n    }, [level, currentExperience, challangeCompleted]);\r\n\r\n    function levelUp(){\r\n        setLevel(level + 1);\r\n        setIsLevelUpModalUp(true);\r\n    }\r\n\r\n    function startNewChallange(){\r\n        const ramdomChallangesIndex = Math.floor(Math.random() * challanges.length);\r\n        const challange = challanges[ramdomChallangesIndex];\r\n\r\n        setActiveChallange(challange);\r\n        \r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted'){\r\n            new Notification('Novo desafio! :3',{\r\n                body: `Valendo ${challange.amount}xp!`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallange(){\r\n        setActiveChallange(null);\r\n    }\r\n\r\n    function completeChallange(){\r\n        if(!activeChallange){\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallange;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if(finalExperience >= experienceToNextLevel){\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();   \r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallange(null);\r\n        setChallangeCompleted(challangeCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallangesContext.Provider \r\n            value={{ \r\n                level, \r\n                currentExperience,\r\n                experienceToNextLevel,\r\n                challangeCompleted, \r\n                activeChallange,\r\n                levelUp,\r\n                startNewChallange,\r\n                resetChallange,\r\n                completeChallange,\r\n                setIsLevelUpModalUp,\r\n            }}\r\n        >\r\n            { children }\r\n\r\n            <LevelUpModal />\r\n        </ChallangesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}