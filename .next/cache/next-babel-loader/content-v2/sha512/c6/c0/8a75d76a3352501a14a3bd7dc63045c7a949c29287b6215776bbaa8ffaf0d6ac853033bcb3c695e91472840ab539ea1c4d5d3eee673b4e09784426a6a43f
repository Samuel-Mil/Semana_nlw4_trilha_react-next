{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\nlw4\\\\trilha_react\\\\moveit-next\\\\src\\\\contexts\\\\ChallangesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallangesContext = /*#__PURE__*/createContext({});\nexport function ChallangesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallangesContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallangesProvider, \"ncs16728k9gXVLb/fXETIQyuku4=\");\n\n_c = ChallangesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallangesProvider\");","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/nlw4/trilha_react/moveit-next/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","ChallangesContext","ChallangesProvider","children","level","setLevel","currentExperience","setCurrentExperience","levelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAkE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC3CH,QAAQ,CAAC,CAAD,CADmC;AAAA,MAC9DI,KAD8D;AAAA,MACvDC,QADuD;;AAAA,mBAEnBL,QAAQ,CAAC,CAAD,CAFW;AAAA,MAE9DM,iBAF8D;AAAA,MAE3CC,oBAF2C;;AAIrE,WAASC,OAAT,GAAkB;AACdH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,OAAO,EAAPA;AAAT,KAAnC;AAAA,cACML;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAbeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\r\n\r\nexport const ChallangesContext = createContext({});\r\n\r\ninterface ChallangesProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallangesProvider({ children }: ChallangesProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n\r\n    function levelUp(){\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallangesContext.Provider value={{ level, levelUp }}>\r\n            { children }\r\n        </ChallangesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}